"use client";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Search, Filter } from "lucide-react";
const SearchFilters = ({ searchTerm, filters, showFilters, onSearchChange, onFilterChange, onToggleFilters, onClearFilters, }) => {
    return (_jsxs("div", { className: "mb-8 bg-white dark:bg-gray-900 rounded-xl shadow-md p-6", children: [_jsxs("div", { className: "flex flex-col md:flex-row gap-4 items-center", children: [_jsxs("div", { className: "flex-grow relative w-full", children: [_jsx("div", { className: "absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none", children: _jsx(Search, { className: "h-5 w-5 text-primary-600" }) }), _jsx("input", { type: "text", placeholder: "Search by property, location or keyword...", value: searchTerm, onChange: onSearchChange, className: "block w-full pl-10 pr-4 py-3 border border-gray-200 dark:border-gray-800/90 shadow-xl rounded-lg bg-gray-50 dark:bg-gray-950/50 text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 focus:ring-1 focus:ring-primary-600 focus:border-primary-500 transition-all" })] }), _jsxs("button", { onClick: onToggleFilters, className: "flex items-center justify-center px-5 py-3 rounded-lg bg-primary-600 hover:bg-primary-700 text-white font-medium transition-colors shadow-sm", children: [_jsx(Filter, { className: "h-5 w-5 mr-2" }), "Filters"] })] }), showFilters && (_jsxs("div", { className: "mt-6 p-6 bg-gray-50 dark:bg-gray-950/50 rounded-lg border border-gray-200 dark:border-gray-800/90", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-5 gap-6", children: [_jsxs("div", { children: [_jsx("label", { htmlFor: "type", className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2", children: "Property Type" }), _jsxs("select", { id: "type", name: "type", value: filters.type, onChange: onFilterChange, className: "w-full px-4 py-2 text-gray-500 border border-gray-300 dark:border-gray-800 rounded-lg bg-white dark:bg-gray-900 focus:ring-primary-600 focus:border-primary-600 transition-all", children: [_jsx("option", { value: "all", children: "All Types" }), _jsx("option", { value: "Single", children: "Single" }), _jsx("option", { value: "Bedseater", children: "Bedseater" }), _jsx("option", { value: "1 Bedroom", children: "1 Bedroom" }), _jsx("option", { value: "2 Bedroom", children: "2 Bedroom" }), _jsx("option", { value: "3 Bedroom", children: "3 Bedroom" }), _jsx("option", { value: "4 Bedroom", children: "4 Bedroom" })] })] }), _jsxs("div", { children: [_jsx("label", { htmlFor: "minPrice", className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2", children: "Min Price (KES)" }), _jsx("input", { type: "number", id: "minPrice", name: "minPrice", value: filters.minPrice, onChange: onFilterChange, placeholder: "10,000", className: "w-full px-4 py-2 border border-gray-300 dark:border-gray-800 rounded-lg bg-white dark:bg-gray-900 focus:ring-primary-600 focus:border-primary-600 transition-all" })] }), _jsxs("div", { children: [_jsx("label", { htmlFor: "maxPrice", className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2", children: "Max Price (KES)" }), _jsx("input", { type: "number", id: "maxPrice", name: "maxPrice", value: filters.maxPrice, onChange: onFilterChange, placeholder: "100,000", className: "w-full px-4 py-2 border border-gray-300 dark:border-gray-800 rounded-lg bg-white dark:bg-gray-900 focus:ring-primary-600 focus:border-primary-600 transition-all" })] }), _jsxs("div", { children: [_jsx("label", { htmlFor: "bedrooms", className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2", children: "Bedrooms" }), _jsxs("select", { id: "bedrooms", name: "bedrooms", value: filters.bedrooms, onChange: onFilterChange, className: "w-full px-4 py-2 text-gray-500 border border-gray-300 dark:border-gray-800 rounded-lg bg-white dark:bg-gray-900 focus:ring-primary-600 focus:border-primary-600 transition-all", children: [_jsx("option", { value: "any", children: "Any" }), _jsx("option", { value: "0", children: "Studio" }), _jsx("option", { value: "1", children: "1+" }), _jsx("option", { value: "2", children: "2+" }), _jsx("option", { value: "3", children: "3+" }), _jsx("option", { value: "4", children: "4+" })] })] }), _jsx("div", { className: "flex items-end", children: _jsxs("label", { className: "flex items-center space-x-3", children: [_jsx("input", { type: "checkbox", name: "featured", checked: filters.featured, onChange: onFilterChange, className: "h-5 w-5 rounded border-gray-300 text-primary-600 focus:ring-1 focus:ring-primary-500" }), _jsx("span", { className: "text-sm font-medium text-gray-700 dark:text-gray-500", children: "Featured Only" })] }) })] }), _jsxs("div", { className: "mt-6 flex justify-end space-x-3", children: [_jsx("button", { onClick: onClearFilters, className: "px-4 py-2 text-sm font-medium rounded text-gray-700 hover:bg-primary-600/20 dark:text-gray-300 hover:text-gray-900 dark:hover:bg-primary-600/10 dark:hover:text-white", children: "Clear All" }), _jsx("button", { onClick: onToggleFilters, className: "px-4 py-2 bg-primary-600 dark:bg-primary-600/20 hover:bg-primary-700 text-white font-medium rounded-lg transition-colors", children: "Apply Filters" })] })] }))] }));
};
export default SearchFilters;
